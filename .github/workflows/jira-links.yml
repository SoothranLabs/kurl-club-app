name: Jira Links

on:
  pull_request:
    types: [opened, edited, synchronize]

jobs:
  jira-links:
    runs-on: ubuntu-latest
    steps:
      - name: Extract Jira keys and comment
        uses: actions/github-script@v7
        with:
          script: |
            const pr = context.payload.pull_request;

            // Get all commits in the PR
            const commits = await github.rest.pulls.listCommits({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: pr.number
            });

            // Extract text from PR title, body, and commit messages
            const allText = [
              pr.title,
              pr.body || '',
              ...commits.data.map(commit => commit.commit.message)
            ].join(' ');

            // Find all KC-### patterns
            const matches = allText.match(/KC-\d+/g) || [];
            if (matches.length === 0) return;

            const unique = [...new Set(matches)];
            const jiraLinks = unique.map(key => 
              `- [${key}](https://kurlclubbugs.atlassian.net/browse/${key})`
            ).join('\n');

            const body = `ðŸ”— **Jira Issues Found:**\n${jiraLinks}`;

            // Check if comment already exists
            const comments = await github.rest.issues.listComments({
              issue_number: pr.number,
              owner: context.repo.owner,
              repo: context.repo.repo
            });

            const existingComment = comments.data.find(comment => 
              comment.body.includes('ðŸ”— **Jira Issues Found:**')
            );

            if (existingComment) {
              // Update existing comment
              await github.rest.issues.updateComment({
                comment_id: existingComment.id,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body
              });
            } else {
              // Create new comment
              await github.rest.issues.createComment({
                issue_number: pr.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body
              });
            }
